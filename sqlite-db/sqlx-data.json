{
  "db": "SQLite",
  "060f5ccae5e675d3118ae357eb225c7fa37d54802a24e328db1dc84e547d4d9d": {
    "query": "\n            delete from open_cets where cfd_id = (select id from cfds where cfds.uuid = $1)\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 1
      },
      "nullable": []
    }
  },
  "12a758d80dca77c52d5a17c9c2b286bdc537dee587289bf6eba94bf0fb16fc83": {
    "query": "\n        SELECT\n            event_log.created_at\n        FROM\n            event_log\n        JOIN\n            closed_cfds on closed_cfds.id = event_log.cfd_id\n        WHERE\n            closed_cfds.uuid = $1\n        ORDER BY event_log.created_at ASC\n        LIMIT 1\n        ",
    "describe": {
      "columns": [
        {
          "name": "created_at",
          "ordinal": 0,
          "type_info": "Int64"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false
      ]
    }
  },
  "20dcbd828efa787dbff1d26cabc1a5ac81acacad6536a27c51aab3b02c0efd58": {
    "query": "\n            SELECT\n                first_seen_timestamp\n            FROM\n                time_to_first_position\n            WHERE\n                taker_id = $1\n            ",
    "describe": {
      "columns": [
        {
          "name": "first_seen_timestamp",
          "ordinal": 0,
          "type_info": "Int64"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        true
      ]
    }
  },
  "2fa4050fc45976c626a21f0de7468a9c2e9eaf6caf6797b5623e663d0c190366": {
    "query": "\n            SELECT\n                uuid as \"uuid: models::OrderId\"\n            FROM\n                closed_cfds\n            ",
    "describe": {
      "columns": [
        {
          "name": "uuid: models::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 0
      },
      "nullable": [
        false
      ]
    }
  },
  "375bcb24b5a899520f76cd2f07ed5f14d4e862ef76a680de4d43350866260baa": {
    "query": "\n            SELECT \n                COUNT(DISTINCT rollover_completed_event_data.id) as rollovers, \n                COUNT(DISTINCT revoked_commit_transactions.id) as revokes, \n                COUNT(DISTINCT open_cets.id) as cets\n            FROM \n                rollover_completed_event_data, \n                revoked_commit_transactions, \n                open_cets;\n            ",
    "describe": {
      "columns": [
        {
          "name": "rollovers",
          "ordinal": 0,
          "type_info": "Int"
        },
        {
          "name": "revokes",
          "ordinal": 1,
          "type_info": "Int"
        },
        {
          "name": "cets",
          "ordinal": 2,
          "type_info": "Int"
        }
      ],
      "parameters": {
        "Right": 0
      },
      "nullable": [
        false,
        null,
        null
      ]
    }
  },
  "450bfcea8dcac5288b69187eb4ae5aec72012d7320e1d4d2602c448671512295": {
    "query": "\n            delete from rollover_completed_event_data where cfd_id = (select id from cfds where cfds.uuid = $1)\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 1
      },
      "nullable": []
    }
  },
  "4f227d1659a2485bb1557677e3de8946468bf0436c03c830443a234e1369d35f": {
    "query": "\n            select\n                id as cfd_id,\n                uuid as \"uuid: models::OrderId\",\n                position as \"position: models::Position\",\n                initial_price as \"initial_price: models::Price\",\n                leverage as \"leverage: models::Leverage\",\n                settlement_time_interval_hours,\n                quantity_usd as \"quantity_usd: models::Usd\",\n                counterparty_network_identity as \"counterparty_network_identity: models::Identity\",\n                counterparty_peer_id as \"counterparty_peer_id: model::libp2p::PeerId\",\n                role as \"role: models::Role\",\n                opening_fee as \"opening_fee: models::OpeningFee\",\n                initial_funding_rate as \"initial_funding_rate: models::FundingRate\",\n                initial_tx_fee_rate as \"initial_tx_fee_rate: model::TxFeeRate\"\n            from\n                cfds\n            where\n                cfds.uuid = $1\n            ",
    "describe": {
      "columns": [
        {
          "name": "cfd_id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "uuid: models::OrderId",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "position: models::Position",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "initial_price: models::Price",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "leverage: models::Leverage",
          "ordinal": 4,
          "type_info": "Int64"
        },
        {
          "name": "settlement_time_interval_hours",
          "ordinal": 5,
          "type_info": "Int64"
        },
        {
          "name": "quantity_usd: models::Usd",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "counterparty_network_identity: models::Identity",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "counterparty_peer_id: model::libp2p::PeerId",
          "ordinal": 8,
          "type_info": "Text"
        },
        {
          "name": "role: models::Role",
          "ordinal": 9,
          "type_info": "Text"
        },
        {
          "name": "opening_fee: models::OpeningFee",
          "ordinal": 10,
          "type_info": "Null"
        },
        {
          "name": "initial_funding_rate: models::FundingRate",
          "ordinal": 11,
          "type_info": "Null"
        },
        {
          "name": "initial_tx_fee_rate: model::TxFeeRate",
          "ordinal": 12,
          "type_info": "Null"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        true,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "51dfaedacea8acc8fde5353d67061df2537941a992ca436bb908d9237414e23c": {
    "query": "\n            SELECT\n                uuid as \"uuid: models::OrderId\"\n            FROM\n                cfds\n            ",
    "describe": {
      "columns": [
        {
          "name": "uuid: models::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 0
      },
      "nullable": [
        false
      ]
    }
  },
  "58e3d05c44b0ddc2d4713e292fffef23b078e042810a411ea22fcf7bfe6c84fd": {
    "query": "\n                insert into open_cets (\n                    cfd_id,\n                    oracle_event_id,\n                    adaptor_sig,\n                    maker_amount,\n                    taker_amount,\n                    n_bits,\n                    range_start,\n                    range_end,\n                    txid\n                ) values ( (select id from cfds where cfds.uuid = $1), $2, $3, $4, $5, $6, $7, $8, $9 )\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 9
      },
      "nullable": []
    }
  },
  "58f901862d163e620ae414a67b3dc0d26014993568727ae974b937cf82f42c84": {
    "query": "\n        INSERT INTO closed_commit_txs\n        (\n            cfd_id,\n            txid\n        )\n        VALUES\n        (\n            (SELECT id FROM closed_cfds WHERE closed_cfds.uuid = $1),\n            $2\n        )\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 2
      },
      "nullable": []
    }
  },
  "59e7860705cd6db5f9a829bb7663ffcae7f0af1a55d06e5d21fa1f77f70ec847": {
    "query": "\n            SELECT\n                encsig_ours as \"encsig_ours: models::AdaptorSignature\",\n                publication_pk_theirs as \"publication_pk_theirs: models::PublicKey\",\n                revocation_sk_theirs as \"revocation_sk_theirs: models::SecretKey\",\n                script_pubkey,\n                txid as \"txid: model::Txid\"\n            FROM\n                revoked_commit_transactions\n            WHERE\n                cfd_id = $1\n            ",
    "describe": {
      "columns": [
        {
          "name": "encsig_ours: models::AdaptorSignature",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "publication_pk_theirs: models::PublicKey",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "revocation_sk_theirs: models::SecretKey",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "script_pubkey",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "txid: model::Txid",
          "ordinal": 4,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "5aced71d79c0741c91a6a00d40732e1718b030f1cb0f55b7ea40c04b5a938d8c": {
    "query": "\n        SELECT\n            closed_commit_txs.txid as \"commit_txid: model::Txid\",\n            closed_refund_txs.txid as \"txid: model::Txid\",\n            closed_refund_txs.vout as \"vout: model::Vout\",\n            closed_refund_txs.payout as \"payout: model::Payout\"\n        FROM\n            closed_refund_txs\n        JOIN\n            closed_commit_txs on closed_commit_txs.cfd_id = closed_refund_txs.cfd_id\n        JOIN\n            closed_cfds on closed_cfds.id = closed_refund_txs.cfd_id\n        WHERE\n            closed_cfds.uuid = $1\n        ",
    "describe": {
      "columns": [
        {
          "name": "commit_txid: model::Txid",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "txid: model::Txid",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "vout: model::Vout",
          "ordinal": 2,
          "type_info": "Int64"
        },
        {
          "name": "payout: model::Payout",
          "ordinal": 3,
          "type_info": "Int64"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false
      ]
    }
  },
  "63c18f39f0262c9178094ef11bb29bf64559611425ef5dca51ecc925cd1ce596": {
    "query": "\n            insert into rollover_completed_event_data (\n                cfd_id,\n                event_id,\n                settlement_event_id,\n                refund_timelock,\n                funding_fee,\n                rate,\n                identity,\n                identity_counterparty,\n                maker_address,\n                taker_address,\n                maker_lock_amount,\n                taker_lock_amount,\n                publish_sk,\n                publish_pk_counterparty,\n                revocation_secret,\n                revocation_pk_counterparty,\n                lock_tx,\n                lock_tx_descriptor,\n                commit_tx,\n                commit_adaptor_signature,\n                commit_descriptor,\n                refund_tx,\n                refund_signature\n            ) values ( \n            (select id from cfds where cfds.uuid = $1),\n            $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23\n            )\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 23
      },
      "nullable": []
    }
  },
  "647af52568b08e0e75e7d15f18bdb64bda20ef813eae3ee41e5977d81f0e8381": {
    "query": "\n            SELECT\n                uuid as \"uuid: models::OrderId\",\n                position as \"position: models::Position\",\n                initial_price as \"initial_price: models::Price\",\n                taker_leverage as \"taker_leverage: models::Leverage\",\n                n_contracts as \"n_contracts: model::Contracts\",\n                counterparty_network_identity as \"counterparty_network_identity: models::Identity\",\n                counterparty_peer_id as \"counterparty_peer_id: model::libp2p::PeerId\",\n                role as \"role: models::Role\",\n                fees as \"fees: model::Fees\",\n                expiry_timestamp,\n                lock_txid as \"lock_txid: model::Txid\",\n                lock_dlc_vout as \"lock_dlc_vout: model::Vout\"\n            FROM\n                closed_cfds\n            WHERE\n                closed_cfds.uuid = $1\n            ",
    "describe": {
      "columns": [
        {
          "name": "uuid: models::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "position: models::Position",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "initial_price: models::Price",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "taker_leverage: models::Leverage",
          "ordinal": 3,
          "type_info": "Int64"
        },
        {
          "name": "n_contracts: model::Contracts",
          "ordinal": 4,
          "type_info": "Int64"
        },
        {
          "name": "counterparty_network_identity: models::Identity",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "counterparty_peer_id: model::libp2p::PeerId",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "role: models::Role",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "fees: model::Fees",
          "ordinal": 8,
          "type_info": "Int64"
        },
        {
          "name": "expiry_timestamp",
          "ordinal": 9,
          "type_info": "Int64"
        },
        {
          "name": "lock_txid: model::Txid",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "lock_dlc_vout: model::Vout",
          "ordinal": 11,
          "type_info": "Int64"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "6705894784db563cfc16ca0ac9c2a4eb152fe6f9111c068c4c077e7de930e0a0": {
    "query": "\n        DELETE FROM\n            cfds\n        WHERE\n            cfds.uuid = $1\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 1
      },
      "nullable": []
    }
  },
  "727e6779c82933f360a8fc29e3be61e3f46263426f3ee216dc1a91f00e7e90fe": {
    "query": "\n            SELECT\n                oracle_event_id as \"oracle_event_id: model::olivia::BitMexPriceEventId\",\n                adaptor_sig as \"adaptor_sig: models::AdaptorSignature\",\n                maker_amount as \"maker_amount: i64\",\n                taker_amount as \"taker_amount: i64\",\n                n_bits as \"n_bits: i64\",\n                range_end as \"range_end: i64\",\n                range_start as \"range_start: i64\",\n                txid as \"txid: model::Txid\"\n            FROM\n                open_cets\n            WHERE\n                cfd_id = $1\n            ",
    "describe": {
      "columns": [
        {
          "name": "oracle_event_id: model::olivia::BitMexPriceEventId",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "adaptor_sig: models::AdaptorSignature",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "maker_amount: i64",
          "ordinal": 2,
          "type_info": "Int64"
        },
        {
          "name": "taker_amount: i64",
          "ordinal": 3,
          "type_info": "Int64"
        },
        {
          "name": "n_bits: i64",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "range_end: i64",
          "ordinal": 5,
          "type_info": "Int64"
        },
        {
          "name": "range_start: i64",
          "ordinal": 6,
          "type_info": "Int64"
        },
        {
          "name": "txid: model::Txid",
          "ordinal": 7,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "7a2f760e4af1661f6df85ba6ce17ea746723f6b2d28f933aa8692c63e9c904be": {
    "query": "select id from cfds where uuid = $1",
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        true
      ]
    }
  },
  "7a7a9cc00acb13e8aab74b57a9ced6e6ef490780956e659e090a15833ceee571": {
    "query": "\n            INSERT INTO event_log_failed (\n                cfd_id,\n                name,\n                created_at\n            )\n            VALUES\n            (\n                (SELECT id FROM failed_cfds WHERE failed_cfds.uuid = $1),\n                $2, $3\n            )\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 3
      },
      "nullable": []
    }
  },
  "7b72ad9417037bdb34fdd53091329bd85718d79a640eabc533652379fb548512": {
    "query": "\n        INSERT INTO closed_refund_txs\n        (\n            cfd_id,\n            txid,\n            vout,\n            payout\n        )\n        VALUES\n        (\n            (SELECT id FROM closed_cfds WHERE closed_cfds.uuid = $1),\n            $2, $3, $4\n        )\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 4
      },
      "nullable": []
    }
  },
  "7d9268dcb6f72fd7c9495dcde388bf998445ada4539d6adb3d3cf693c6339b3b": {
    "query": "\n\n        select\n            c.id as cfd_row_id,\n            events.id as event_row_id,\n            name,\n            data,\n            created_at as \"created_at: models::Timestamp\"\n        from\n            events\n        join\n            cfds c on c.id = events.cfd_id\n        where\n            uuid = $1\n        limit $2,-1\n            ",
    "describe": {
      "columns": [
        {
          "name": "cfd_row_id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "event_row_id",
          "ordinal": 1,
          "type_info": "Int64"
        },
        {
          "name": "name",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "data",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "created_at: models::Timestamp",
          "ordinal": 4,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 2
      },
      "nullable": [
        true,
        false,
        false,
        false,
        false
      ]
    }
  },
  "8042905d373e5c9c16d1affdca3551e420f891718db352cb24b6ed4c511beb21": {
    "query": "\n        SELECT\n            collaborative_settlement_txs.txid as \"txid: model::Txid\",\n            collaborative_settlement_txs.vout as \"vout: model::Vout\",\n            collaborative_settlement_txs.payout as \"payout: model::Payout\",\n            collaborative_settlement_txs.price as \"price: models::Price\"\n        FROM\n            collaborative_settlement_txs\n        JOIN\n            closed_cfds on closed_cfds.id = collaborative_settlement_txs.cfd_id\n        WHERE\n            closed_cfds.uuid = $1\n        ",
    "describe": {
      "columns": [
        {
          "name": "txid: model::Txid",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "vout: model::Vout",
          "ordinal": 1,
          "type_info": "Int64"
        },
        {
          "name": "payout: model::Payout",
          "ordinal": 2,
          "type_info": "Int64"
        },
        {
          "name": "price: models::Price",
          "ordinal": 3,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false
      ]
    }
  },
  "8175b7702d6a0b28843f03a9b6f507a64a703ae2ff649b3a28f339f3abb70fce": {
    "query": "\n        INSERT INTO closed_cets\n        (\n            cfd_id,\n            txid,\n            vout,\n            payout,\n            price\n        )\n        VALUES\n        (\n            (SELECT id FROM closed_cfds WHERE closed_cfds.uuid = $1),\n            $2, $3, $4, $5\n        )\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 5
      },
      "nullable": []
    }
  },
  "8192c50dcb3342b01b9ab39daadcbc73f75d3b7f48ae18dfe4d936ebf8725fb4": {
    "query": "\n            INSERT INTO event_log (\n                cfd_id,\n                name,\n                created_at\n            )\n            VALUES\n            (\n                (SELECT id FROM closed_cfds WHERE closed_cfds.uuid = $1),\n                $2, $3\n            )\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 3
      },
      "nullable": []
    }
  },
  "84834ff5f4cdde6d9e12d7403199bb39ad4b826c305f0729395d4a923c9a4757": {
    "query": "\n            SELECT\n                settlement_event_id as \"settlement_event_id: model::olivia::BitMexPriceEventId\",\n                refund_timelock as \"refund_timelock: i64\",\n                funding_fee as \"funding_fee: i64\",\n                rate as \"rate: models::FundingRate\",\n                identity as \"identity: models::SecretKey\",\n                identity_counterparty as \"identity_counterparty: models::PublicKey\",\n                maker_address,\n                taker_address,\n                maker_lock_amount as \"maker_lock_amount: i64\",\n                taker_lock_amount as \"taker_lock_amount: i64\",\n                publish_sk as \"publish_sk: models::SecretKey\",\n                publish_pk_counterparty as \"publish_pk_counterparty: models::PublicKey\",\n                revocation_secret as \"revocation_secret: models::SecretKey\",\n                revocation_pk_counterparty as \"revocation_pk_counterparty: models::PublicKey\",\n                lock_tx as \"lock_tx: models::Transaction\",\n                lock_tx_descriptor,\n                commit_tx as \"commit_tx: models::Transaction\",\n                commit_adaptor_signature as \"commit_adaptor_signature: models::AdaptorSignature\",\n                commit_descriptor,\n                refund_tx as \"refund_tx: models::Transaction\",\n                refund_signature\n            FROM\n                rollover_completed_event_data\n            WHERE \n                cfd_id = $1 and \n                event_id = $2\n            ",
    "describe": {
      "columns": [
        {
          "name": "settlement_event_id: model::olivia::BitMexPriceEventId",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "refund_timelock: i64",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "funding_fee: i64",
          "ordinal": 2,
          "type_info": "Null"
        },
        {
          "name": "rate: models::FundingRate",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "identity: models::SecretKey",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "identity_counterparty: models::PublicKey",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "maker_address",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "taker_address",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "maker_lock_amount: i64",
          "ordinal": 8,
          "type_info": "Null"
        },
        {
          "name": "taker_lock_amount: i64",
          "ordinal": 9,
          "type_info": "Null"
        },
        {
          "name": "publish_sk: models::SecretKey",
          "ordinal": 10,
          "type_info": "Text"
        },
        {
          "name": "publish_pk_counterparty: models::PublicKey",
          "ordinal": 11,
          "type_info": "Text"
        },
        {
          "name": "revocation_secret: models::SecretKey",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "revocation_pk_counterparty: models::PublicKey",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "lock_tx: models::Transaction",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "lock_tx_descriptor",
          "ordinal": 15,
          "type_info": "Text"
        },
        {
          "name": "commit_tx: models::Transaction",
          "ordinal": 16,
          "type_info": "Text"
        },
        {
          "name": "commit_adaptor_signature: models::AdaptorSignature",
          "ordinal": 17,
          "type_info": "Text"
        },
        {
          "name": "commit_descriptor",
          "ordinal": 18,
          "type_info": "Text"
        },
        {
          "name": "refund_tx: models::Transaction",
          "ordinal": 19,
          "type_info": "Text"
        },
        {
          "name": "refund_signature",
          "ordinal": 20,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 2
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "8556fa5ffa07322e35a16add4e40fa35bd543f7a1cb6d81b046ded4ec7bbb0be": {
    "query": "\n        INSERT INTO closed_cfds\n        (\n            uuid,\n            position,\n            initial_price,\n            taker_leverage,\n            n_contracts,\n            counterparty_network_identity,\n            counterparty_peer_id,\n            role,\n            fees,\n            expiry_timestamp,\n            lock_txid,\n            lock_dlc_vout\n        )\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 12
      },
      "nullable": []
    }
  },
  "86477acca532607d45b1c3dda0d5dce72e1e8808856e89352f74caecd6657636": {
    "query": "\n            select\n                id as cfd_id,\n                uuid as \"uuid: models::OrderId\"\n            from\n                cfds\n            where exists (\n                select id from EVENTS as events\n                where events.cfd_id = cfds.id and\n                (\n                    events.name = $1 or\n                    events.name = $2 or\n                    events.name= $3\n                )\n            )\n            ",
    "describe": {
      "columns": [
        {
          "name": "cfd_id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "uuid: models::OrderId",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 3
      },
      "nullable": [
        true,
        false
      ]
    }
  },
  "8874e29f69435343da92ab0dbd49a5b16ff556f9f2c2f32bb3809b730d65b74f": {
    "query": "\n            SELECT\n                uuid as \"uuid: models::OrderId\"\n            FROM\n                failed_cfds\n            ",
    "describe": {
      "columns": [
        {
          "name": "uuid: models::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 0
      },
      "nullable": [
        false
      ]
    }
  },
  "89632eadef4fae403dcccf6f3bf4fe7c07a9c0afa71150a6e0ad535d35197e74": {
    "query": "\n            SELECT\n                uuid as \"id: models::OrderId\",\n                position as \"position: models::Position\",\n                initial_price as \"initial_price: models::Price\",\n                taker_leverage as \"taker_leverage: models::Leverage\",\n                n_contracts as \"n_contracts: model::Contracts\",\n                counterparty_network_identity as \"counterparty_network_identity: models::Identity\",\n                counterparty_peer_id as \"counterparty_peer_id: model::libp2p::PeerId\",\n                role as \"role: models::Role\",\n                fees as \"fees: model::Fees\",\n                kind as \"kind: Kind\"\n            FROM\n                failed_cfds\n            WHERE\n                failed_cfds.uuid = $1\n            ",
    "describe": {
      "columns": [
        {
          "name": "id: models::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "position: models::Position",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "initial_price: models::Price",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "taker_leverage: models::Leverage",
          "ordinal": 3,
          "type_info": "Int64"
        },
        {
          "name": "n_contracts: model::Contracts",
          "ordinal": 4,
          "type_info": "Int64"
        },
        {
          "name": "counterparty_network_identity: models::Identity",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "counterparty_peer_id: model::libp2p::PeerId",
          "ordinal": 6,
          "type_info": "Text"
        },
        {
          "name": "role: models::Role",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "fees: model::Fees",
          "ordinal": 8,
          "type_info": "Int64"
        },
        {
          "name": "kind: Kind",
          "ordinal": 9,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "8be24a7ddeb039a60c0600232d742f9ba75c02cde7bf536bb190525be07f0d5b": {
    "query": "\n        INSERT INTO collaborative_settlement_txs\n        (\n            cfd_id,\n            txid,\n            vout,\n            payout,\n            price\n        )\n        VALUES\n        (\n            (SELECT id FROM closed_cfds WHERE closed_cfds.uuid = $1),\n            $2, $3, $4, $5\n        )\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 5
      },
      "nullable": []
    }
  },
  "917676bc8f8daffc784657cd8a1f8552273fa63be601a0a9782b4073359abfff": {
    "query": "\n            delete from revoked_commit_transactions where cfd_id = (select id from cfds where cfds.uuid = $1)\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 1
      },
      "nullable": []
    }
  },
  "9b6615bc3e46b09f11f53e3d817fc2516c4ca24f129157ef0e45a4d5b51fe6a7": {
    "query": "\n            select\n                id as cfd_id,\n                uuid as \"uuid: models::OrderId\"\n            from\n                cfds\n            where exists (\n                select id from EVENTS as events\n                where events.cfd_id = cfds.id and\n                (\n                    events.name = $1 or\n                    events.name = $2\n                )\n            )\n            ",
    "describe": {
      "columns": [
        {
          "name": "cfd_id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "uuid: models::OrderId",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 2
      },
      "nullable": [
        true,
        false
      ]
    }
  },
  "9ee7e0229619689eed2c5f2e834d9449a732824bbeffed628d01abc1d1839319": {
    "query": "\n            SELECT\n                first_position_timestamp\n            FROM\n                time_to_first_position\n            WHERE\n                taker_id = $1\n            ",
    "describe": {
      "columns": [
        {
          "name": "first_position_timestamp",
          "ordinal": 0,
          "type_info": "Int64"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        true
      ]
    }
  },
  "a29bee343cd18faeb7589c00b0583cf65aab0fcb1aba961d8a6f0d016dcb94e2": {
    "query": "\n        SELECT\n            closed_commit_txs.txid as \"commit_txid: model::Txid\",\n            closed_cets.txid as \"txid: model::Txid\",\n            closed_cets.vout as \"vout: model::Vout\",\n            closed_cets.payout as \"payout: model::Payout\",\n            closed_cets.price as \"price: models::Price\"\n        FROM\n            closed_cets\n        JOIN\n            closed_commit_txs on closed_commit_txs.cfd_id = closed_cets.cfd_id\n        JOIN\n            closed_cfds on closed_cfds.id = closed_cets.cfd_id\n        WHERE\n            closed_cfds.uuid = $1\n        ",
    "describe": {
      "columns": [
        {
          "name": "commit_txid: model::Txid",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "txid: model::Txid",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "vout: model::Vout",
          "ordinal": 2,
          "type_info": "Int64"
        },
        {
          "name": "payout: model::Payout",
          "ordinal": 3,
          "type_info": "Int64"
        },
        {
          "name": "price: models::Price",
          "ordinal": 4,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "a8124175098e096f61da0874f7cd9f1ebfadde95fd2fc2cc478982be04d1e150": {
    "query": "\n            UPDATE time_to_first_position\n            SET first_position_timestamp = $2\n            WHERE taker_id = $1 and first_position_timestamp is NULL\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 2
      },
      "nullable": []
    }
  },
  "cd61f78c82124bdc7f5b97b7ff86b4608708463c25aca9b4de156ed0d837d535": {
    "query": "\n        INSERT INTO failed_cfds\n        (\n            uuid,\n            position,\n            initial_price,\n            taker_leverage,\n            n_contracts,\n            counterparty_network_identity,\n            counterparty_peer_id,\n            role,\n            fees,\n            kind\n        )\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 10
      },
      "nullable": []
    }
  },
  "d87c695f2f1f67e9acbc2ed4dac9a083738e82c52e419f5f025f8c4e327b4858": {
    "query": "\n            INSERT OR IGNORE INTO time_to_first_position\n            (\n                taker_id,\n                first_seen_timestamp\n            )\n            VALUES ($1, $2)\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 2
      },
      "nullable": []
    }
  },
  "d8d9d380f3847552a7060c0cdde8f1ade3ed0d4a260bc07137a6c274d556a927": {
    "query": "\n                insert into revoked_commit_transactions (\n                    cfd_id,\n                    encsig_ours,\n                    publication_pk_theirs,\n                    revocation_sk_theirs,\n                    script_pubkey,\n                    txid\n                ) values ( (select id from cfds where cfds.uuid = $1), $2, $3, $4, $5, $6 )\n            ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 6
      },
      "nullable": []
    }
  },
  "eaa1ac5e11d036f67d5a6fd1b7c150dba3f59021faee1e89abb0f2cda4ca6af9": {
    "query": "\n        SELECT\n            event_log_failed.created_at\n        FROM\n            event_log_failed\n        JOIN\n            failed_cfds on failed_cfds.id = event_log_failed.cfd_id\n        WHERE\n            failed_cfds.uuid = $1\n        ORDER BY event_log_failed.created_at ASC\n        LIMIT 1\n        ",
    "describe": {
      "columns": [
        {
          "name": "created_at",
          "ordinal": 0,
          "type_info": "Int64"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false
      ]
    }
  },
  "fc7e8992943cd5c64d307272eb1951e4c7c645308b20245d5f2818aaaf3b265b": {
    "query": "\n        DELETE FROM\n            events\n        WHERE events.cfd_id IN\n            (SELECT id FROM cfds WHERE cfds.uuid = $1)\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 1
      },
      "nullable": []
    }
  }
}