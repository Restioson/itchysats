{
  "db": "SQLite",
  "0862abd1900c5c5ae4a145635c19aef1a563ea470530d83325839868ffacd7bf": {
    "query": "\n        with ord as (\n            select\n                id as order_id,\n                uuid,\n                trading_pair,\n                position,\n                initial_price,\n                min_quantity,\n                max_quantity,\n                leverage,\n                liquidation_price,\n                creation_timestamp_seconds as ts_secs,\n                creation_timestamp_nanoseconds as ts_nanos,\n                term_seconds as term_secs,\n                term_nanoseconds as term_nanos,\n                origin,\n                oracle_event_id\n            from orders\n        ),\n\n        cfd as (\n            select\n                id as cfd_id,\n                order_id,\n                quantity_usd\n            from cfds\n        ),\n\n        tmp as (\n            select\n                id as state_id,\n                cfd_id,\n                state\n            from cfd_states\n        ),\n\n        state as (\n            select\n                tmp.state,\n                cfd.order_id,\n                cfd.quantity_usd\n            from tmp\n            inner join cfd on tmp.cfd_id = cfd.cfd_id\n            where tmp.state_id in (\n                select max(state_id)\n                from tmp\n                group by state_id\n            )\n        )\n\n        select\n            ord.uuid as \"uuid: crate::model::cfd::OrderId\",\n            ord.trading_pair as \"trading_pair: crate::model::TradingPair\",\n            ord.position as \"position: crate::model::Position\",\n            ord.initial_price,\n            ord.min_quantity,\n            ord.max_quantity,\n            ord.leverage as \"leverage: crate::model::Leverage\",\n            ord.liquidation_price,\n            ord.ts_secs as \"ts_secs: i64\",\n            ord.ts_nanos as \"ts_nanos: i32\",\n            ord.term_secs as \"term_secs: i64\",\n            ord.term_nanos as \"term_nanos: i32\",\n            ord.origin as \"origin: crate::model::cfd::Origin\",\n            ord.oracle_event_id,\n            state.quantity_usd,\n            state.state\n\n        from ord\n            inner join state on state.order_id = ord.order_id\n\n        where ord.uuid = $1\n        ",
    "describe": {
      "columns": [
        {
          "name": "uuid: crate::model::cfd::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "trading_pair: crate::model::TradingPair",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "position: crate::model::Position",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "initial_price",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "min_quantity",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "max_quantity",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "leverage: crate::model::Leverage",
          "ordinal": 6,
          "type_info": "Int64"
        },
        {
          "name": "liquidation_price",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "ts_secs: i64",
          "ordinal": 8,
          "type_info": "Int64"
        },
        {
          "name": "ts_nanos: i32",
          "ordinal": 9,
          "type_info": "Int64"
        },
        {
          "name": "term_secs: i64",
          "ordinal": 10,
          "type_info": "Int64"
        },
        {
          "name": "term_nanos: i32",
          "ordinal": 11,
          "type_info": "Int64"
        },
        {
          "name": "origin: crate::model::cfd::Origin",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "oracle_event_id",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "quantity_usd",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "state",
          "ordinal": 15,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "221a6283db798bacaba99e7e85130f9a8bbea1299d8cb99d272b1d478dc19775": {
    "query": "\n        select\n            state\n        from cfd_states\n        where cfd_id = $1\n        order by id desc\n        limit 1;\n        ",
    "describe": {
      "columns": [
        {
          "name": "state",
          "ordinal": 0,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false
      ]
    }
  },
  "62c4b31272cc2c889ebc946f4eaa3160ef2cf8c272412a77e9339249468d14bf": {
    "query": "\n        with ord as (\n            select\n                id as order_id,\n                uuid,\n                trading_pair,\n                position,\n                initial_price,\n                min_quantity,\n                max_quantity,\n                leverage,\n                liquidation_price,\n                creation_timestamp_seconds as ts_secs,\n                creation_timestamp_nanoseconds as ts_nanos,\n                term_seconds as term_secs,\n                term_nanoseconds as term_nanos,\n                origin,\n                oracle_event_id\n            from orders\n        ),\n\n        cfd as (\n            select\n                id as cfd_id,\n                order_id,\n                quantity_usd as quantity_usd\n            from cfds\n        ),\n\n        tmp as (\n            select\n                id as state_id,\n                cfd_id,\n                state\n            from cfd_states\n        ),\n\n        state as (\n            select\n                tmp.state,\n                cfd.order_id,\n                cfd.quantity_usd\n            from tmp\n            inner join cfd on tmp.cfd_id = cfd.cfd_id\n            where tmp.state_id in (\n                select max(state_id)\n                from tmp\n                group by state_id\n            )\n        )\n\n        select\n            ord.uuid as \"uuid: crate::model::cfd::OrderId\",\n            ord.trading_pair as \"trading_pair: crate::model::TradingPair\",\n            ord.position as \"position: crate::model::Position\",\n            ord.initial_price,\n            ord.min_quantity,\n            ord.max_quantity,\n            ord.leverage as \"leverage: crate::model::Leverage\",\n            ord.liquidation_price,\n            ord.ts_secs as \"ts_secs: i64\",\n            ord.ts_nanos as \"ts_nanos: i32\",\n            ord.term_secs as \"term_secs: i64\",\n            ord.term_nanos as \"term_nanos: i32\",\n            ord.origin as \"origin: crate::model::cfd::Origin\",\n            ord.oracle_event_id,\n            state.quantity_usd,\n            state.state\n\n        from ord\n            inner join state on state.order_id = ord.order_id\n\n        where ord.oracle_event_id = $1\n        ",
    "describe": {
      "columns": [
        {
          "name": "uuid: crate::model::cfd::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "trading_pair: crate::model::TradingPair",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "position: crate::model::Position",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "initial_price",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "min_quantity",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "max_quantity",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "leverage: crate::model::Leverage",
          "ordinal": 6,
          "type_info": "Int64"
        },
        {
          "name": "liquidation_price",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "ts_secs: i64",
          "ordinal": 8,
          "type_info": "Int64"
        },
        {
          "name": "ts_nanos: i32",
          "ordinal": 9,
          "type_info": "Int64"
        },
        {
          "name": "term_secs: i64",
          "ordinal": 10,
          "type_info": "Int64"
        },
        {
          "name": "term_nanos: i32",
          "ordinal": 11,
          "type_info": "Int64"
        },
        {
          "name": "origin: crate::model::cfd::Origin",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "oracle_event_id",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "quantity_usd",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "state",
          "ordinal": 15,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "8cbe349911b35d8e79763d64b4f5813b4bd98f12e0bba5ada84d2cae8b08ef4f": {
    "query": "\n        select\n            id\n        from cfds\n        where order_uuid = $1;\n        ",
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        true
      ]
    }
  },
  "b708b7116aa14093e0e21ab8f87e52928a70649a62250902054ef6526f1d6f66": {
    "query": "\n        select\n            uuid as \"uuid: crate::model::cfd::OrderId\",\n            trading_pair as \"trading_pair: crate::model::TradingPair\",\n            position as \"position: crate::model::Position\",\n            initial_price,\n            min_quantity,\n            max_quantity,\n            leverage as \"leverage: crate::model::Leverage\",\n            liquidation_price,\n            creation_timestamp_seconds as \"ts_secs: i64\",\n            creation_timestamp_nanoseconds as \"ts_nanos: i32\",\n            term_seconds as \"term_secs: i64\",\n            term_nanoseconds as \"term_nanos: i32\",\n            origin as \"origin: crate::model::cfd::Origin\",\n            oracle_event_id\n\n        from orders\n        where uuid = $1\n        ",
    "describe": {
      "columns": [
        {
          "name": "uuid: crate::model::cfd::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "trading_pair: crate::model::TradingPair",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "position: crate::model::Position",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "initial_price",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "min_quantity",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "max_quantity",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "leverage: crate::model::Leverage",
          "ordinal": 6,
          "type_info": "Int64"
        },
        {
          "name": "liquidation_price",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "ts_secs: i64",
          "ordinal": 8,
          "type_info": "Int64"
        },
        {
          "name": "ts_nanos: i32",
          "ordinal": 9,
          "type_info": "Int64"
        },
        {
          "name": "term_secs: i64",
          "ordinal": 10,
          "type_info": "Int64"
        },
        {
          "name": "term_nanos: i32",
          "ordinal": 11,
          "type_info": "Int64"
        },
        {
          "name": "origin: crate::model::cfd::Origin",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "oracle_event_id",
          "ordinal": 13,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 1
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "d8323d50427833c983088011597081023ac564d65bc459d26aa27549a49b1df8": {
    "query": "\n        with ord as (\n            select\n                id as order_id,\n                uuid,\n                trading_pair,\n                position,\n                initial_price,\n                min_quantity,\n                max_quantity,\n                leverage,\n                liquidation_price,\n                creation_timestamp_seconds as ts_secs,\n                creation_timestamp_nanoseconds as ts_nanos,\n                term_seconds as term_secs,\n                term_nanoseconds as term_nanos,\n                origin,\n                oracle_event_id\n            from orders\n        ),\n\n        cfd as (\n            select\n                id as cfd_id,\n                order_id,\n                quantity_usd as quantity_usd\n            from cfds\n        ),\n\n        tmp as (\n            select\n                id as state_id,\n                cfd_id,\n                state\n            from cfd_states\n        ),\n\n        state as (\n            select\n                tmp.state,\n                cfd.order_id,\n                cfd.quantity_usd\n            from tmp\n            inner join cfd on tmp.cfd_id = cfd.cfd_id\n            where tmp.state_id in (\n                select max(state_id)\n                from tmp\n                group by state_id\n            )\n        )\n\n        select\n            ord.uuid as \"uuid: crate::model::cfd::OrderId\",\n            ord.trading_pair as \"trading_pair: crate::model::TradingPair\",\n            ord.position as \"position: crate::model::Position\",\n            ord.initial_price,\n            ord.min_quantity,\n            ord.max_quantity,\n            ord.leverage as \"leverage: crate::model::Leverage\",\n            ord.liquidation_price,\n            ord.ts_secs as \"ts_secs: i64\",\n            ord.ts_nanos as \"ts_nanos: i32\",\n            ord.term_secs as \"term_secs: i64\",\n            ord.term_nanos as \"term_nanos: i32\",\n            ord.origin as \"origin: crate::model::cfd::Origin\",\n            ord.oracle_event_id,\n            state.quantity_usd,\n            state.state\n\n        from ord\n            inner join state on state.order_id = ord.order_id\n        ",
    "describe": {
      "columns": [
        {
          "name": "uuid: crate::model::cfd::OrderId",
          "ordinal": 0,
          "type_info": "Text"
        },
        {
          "name": "trading_pair: crate::model::TradingPair",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "position: crate::model::Position",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "initial_price",
          "ordinal": 3,
          "type_info": "Text"
        },
        {
          "name": "min_quantity",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "max_quantity",
          "ordinal": 5,
          "type_info": "Text"
        },
        {
          "name": "leverage: crate::model::Leverage",
          "ordinal": 6,
          "type_info": "Int64"
        },
        {
          "name": "liquidation_price",
          "ordinal": 7,
          "type_info": "Text"
        },
        {
          "name": "ts_secs: i64",
          "ordinal": 8,
          "type_info": "Int64"
        },
        {
          "name": "ts_nanos: i32",
          "ordinal": 9,
          "type_info": "Int64"
        },
        {
          "name": "term_secs: i64",
          "ordinal": 10,
          "type_info": "Int64"
        },
        {
          "name": "term_nanos: i32",
          "ordinal": 11,
          "type_info": "Int64"
        },
        {
          "name": "origin: crate::model::cfd::Origin",
          "ordinal": 12,
          "type_info": "Text"
        },
        {
          "name": "oracle_event_id",
          "ordinal": 13,
          "type_info": "Text"
        },
        {
          "name": "quantity_usd",
          "ordinal": 14,
          "type_info": "Text"
        },
        {
          "name": "state",
          "ordinal": 15,
          "type_info": "Text"
        }
      ],
      "parameters": {
        "Right": 0
      },
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    }
  },
  "dde58d2118537f05941a79896639efb2e64f2bb6cf76f14c6c2eec20ec253160": {
    "query": "\n        insert into cfds (\n            order_id,\n            order_uuid,\n            quantity_usd\n        )\n        select\n            id as order_id,\n            uuid as order_uuid,\n            $2 as quantity_usd\n        from orders\n        where uuid = $1;\n\n        insert into cfd_states (\n            cfd_id,\n            state\n        )\n        select\n            id as cfd_id,\n            $3 as state\n        from cfds\n        order by id desc limit 1;\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 3
      },
      "nullable": []
    }
  },
  "faaf391b5dca70a87c5f8ac9346fd6d9dd1ae6b83d99a0311df463ecaaf8c301": {
    "query": "\n        insert into cfd_states (\n            cfd_id,\n            state\n        ) values ($1, $2);\n        ",
    "describe": {
      "columns": [],
      "parameters": {
        "Right": 2
      },
      "nullable": []
    }
  }
}